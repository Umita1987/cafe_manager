from django.db.models import Q, Sum
from django.http import HttpResponseRedirect
from django.shortcuts import redirect
from django.urls import reverse_lazy
from django.views.generic import ListView, CreateView, UpdateView, DeleteView, TemplateView
from django.forms import BaseInlineFormSet

from .forms import OrderItemFormSet, OrderForm
from .models import Order

# üåü –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ (–ø–æ–∏—Å–∫ + —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è)
class OrderListView(ListView):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Å—Ç–∞—Ç—É—Å—É."""
    model = Order
    template_name = 'orders/order_list.html'
    context_object_name = 'orders'

    def get_queryset(self) -> list[Order]:
        """–§–∏–ª—å—Ç—Ä—É–µ—Ç –∑–∞–∫–∞–∑—ã –ø–æ –Ω–æ–º–µ—Ä—É —Å—Ç–æ–ª–∞ –∏–ª–∏ —Å—Ç–∞—Ç—É—Å—É."""
        queryset = super().get_queryset()
        query: str | None = self.request.GET.get('q')
        status_filter: str | None = self.request.GET.get('status')

        if query:
            queryset = queryset.filter(Q(table_number__icontains=query))

        if status_filter:
            queryset = queryset.filter(status=status_filter)

        return queryset


# üåü –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
class OrderCreateView(CreateView):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –±–ª—é–¥."""
    model = Order
    form_class = OrderForm
    template_name = 'orders/order_form.html'

    def get_context_data(self, **kwargs) -> dict:
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Ñ–æ—Ä–º—É –¥–ª—è –±–ª—é–¥ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞."""
        data = super().get_context_data(**kwargs)
        if self.request.POST:
            data['items']: BaseInlineFormSet = OrderItemFormSet(self.request.POST)
        else:
            data['items']: BaseInlineFormSet = OrderItemFormSet()
        return data

    def form_valid(self, form: OrderForm) -> HttpResponseRedirect:
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–∫–∞–∑ –∏ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç –µ–≥–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å."""
        context = self.get_context_data()
        items: BaseInlineFormSet = context['items']
        self.object: Order = form.save()

        if items.is_valid():
            items.instance = self.object
            items.save()
            self.object.calculate_total()  # –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—É–º–º—É –∑–∞–∫–∞–∑–∞
        return redirect('order_list')


# üåü –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
class OrderDeleteView(DeleteView):
    """–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø–æ ID."""
    model = Order
    template_name = 'orders/order_confirm_delete.html'
    success_url = reverse_lazy('order_list')


# üåü –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ (–Ω–æ–º–µ—Ä —Å—Ç–æ–ª–∞, –±–ª—é–¥–∞, —Å—Ç–∞—Ç—É—Å)
class OrderUpdateView(UpdateView):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∑–∞–∫–∞–∑–∞."""
    model = Order
    form_class = OrderForm
    template_name = 'orders/order_form.html'
    success_url = reverse_lazy('order_list')

    def get_context_data(self, **kwargs) -> dict:
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Ñ–æ—Ä–º—É –¥–ª—è –±–ª—é–¥ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞."""
        context = super().get_context_data(**kwargs)
        if self.request.POST:
            context['items']: BaseInlineFormSet = OrderItemFormSet(self.request.POST, instance=self.object)
        else:
            context['items']: BaseInlineFormSet = OrderItemFormSet(instance=self.object)
        return context

    def form_valid(self, form: OrderForm) -> HttpResponseRedirect:
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–∫–∞–∑–µ –∏ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç –µ–≥–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å."""
        context = self.get_context_data()
        items_formset: BaseInlineFormSet = context['items']

        if items_formset.is_valid():
            self.object: Order = form.save()
            items_formset.instance = self.object
            items_formset.save()
            self.object.calculate_total()  # –ü–µ—Ä–µ—Å—á–µ—Ç —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞
            return super().form_valid(form)

        return self.render_to_response(self.get_context_data(form=form))


# üåü –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ä–∞—Å—á–µ—Ç–æ–º –≤—ã—Ä—É—á–∫–∏ –∑–∞ —Å–º–µ–Ω—É
class RevenueView(TemplateView):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤—ã—Ä—É—á–∫—É –∑–∞ —Å–º–µ–Ω—É (–∑–∞–∫–∞–∑—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "–æ–ø–ª–∞—á–µ–Ω–æ")."""
    template_name = 'orders/revenue.html'

    def get_context_data(self, **kwargs) -> dict:
        """–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—É–º–º—É –≤—Å–µ—Ö –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤."""
        context = super().get_context_data(**kwargs)
        total_revenue: int | float = Order.objects.filter(status='paid').aggregate(total=Sum('total_price'))['total'] or 0
        context['total_revenue'] = total_revenue
        return context
